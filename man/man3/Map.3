.TH "Map" 3 "Thu May 20 2021" "Simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Map
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Map\&.h>\fP
.PP
Inherited by \fBWKTMap\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~Map\fP ()"
.br
.ti -1c
.RI "virtual Geometry * \fBgetBoundary\fP () const =0"
.br
.ti -1c
.RI "virtual Geometry * \fBgetEnvelope\fP () const =0"
.br
.ti -1c
.RI "const virtual GeometryFactory::Ptr & \fBgetGlobalFactory\fP () const =0"
.br
.ti -1c
.RI "virtual void \fBaddGrid\fP (double dimTileX, double dimTileY)"
.br
.ti -1c
.RI "virtual unsigned long \fBgetNoTilesX\fP () const"
.br
.ti -1c
.RI "virtual unsigned long \fBgetNoTilesY\fP () const"
.br
.ti -1c
.RI "virtual double \fBgetXTileDim\fP () const"
.br
.ti -1c
.RI "virtual double \fBgetYTileDim\fP () const"
.br
.ti -1c
.RI "virtual double \fBgetXOrigin\fP () const"
.br
.ti -1c
.RI "virtual double \fBgetYOrigin\fP () const"
.br
.ti -1c
.RI "const virtual unsigned long \fBgetNoTiles\fP () const"
.br
.ti -1c
.RI "virtual Coordinate \fBgetTileCenter\fP (unsigned long tileIndex) const"
.br
.ti -1c
.RI "virtual unsigned long \fBgetTileNo\fP (const Point *p) const"
.br
.ti -1c
.RI "virtual unsigned long \fBgetTileNo\fP (double x, double y) const"
.br
.ti -1c
.RI "virtual void \fBdumpGrid\fP (const string &gridFileName) const"
.br
.ti -1c
.RI "virtual Coordinate * \fBgetTileCenters\fP () const"
.br
.ti -1c
.RI "virtual bool \fBhasGrid\fP () const"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBMap\fP (string mapFileName)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBGrid\fP * \fBm_grid\fP"
.br
.ti -1c
.RI "string \fBm_mapFileName\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This is an abstract the class defining the interface of any implementing class that will be used as the map of the simulation\&. Currently there is only one implementation, a \fBWKTMap\fP class, which reads the external boundary from a WKT (Well Known Text) string stored in a file\&. This file is provided in the command line with '-m' option\&. The map has a boundary that is implemented as a Geometry object, a factory object of GeometryFactory type used to create other objects\&. It also embeds a grid of rectangular tiles that covers the whole map\&. These tiles are used later for computing the localization probability for each mobile device\&. All the methods requesting the grid parameters are delegated to the \fBGrid\fP object embeded in the \fBMap\fP class\&. All geometric and geographic features of the simulator use the GEOS++ library\&. GEOS++ is an open source C++ library which is just a port to C++ of the well known Java Topology Suite\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "virtual Map::~Map ()\fC [virtual]\fP"
Default destructor\&. 
.SS "Map::Map (string mapFileName)\fC [protected]\fP"

.SH "Member Function Documentation"
.PP 
.SS "virtual void Map::addGrid (double dimTileX, double dimTileY)\fC [virtual]\fP"
Creates a \fBGrid\fP object with the dimensions of tiles specified as parameters\&. It computes to necessary number of tiles such that the \fBGrid\fP covers the bounding box of the map\&. The origin point of the grid (the left bottom point) is set to the minimum values for x and y coordinates of the bounding box of the \fBMap\fP\&. A pointer to the \fBGrid\fP object is then stored as a member of the \fBMap\fP class\&. 
.PP
\fBParameters\fP
.RS 4
\fIdimTileX\fP the dimension of a tile on OX axis\&. 
.br
\fIdimTileY\fP the dimension of a grid on OY axis\&. 
.RE
.PP

.SS "virtual void Map::dumpGrid (const string & gridFileName) const\fC [virtual]\fP"
Writes the description of the grid to a file\&. This name of the file is read from the simulation configuration file\&. An example file is given here:
.PP
.PP
.nf
Origin X,Origin Y,X Tile Dim,Y Tile Dim,No Tiles X,No Tiles Y
0\&.000000,0\&.000000,250\&.000000,250\&.000000,40,40
.fi
.PP
 
.PP
\fBParameters\fP
.RS 4
\fIgridFileName\fP the name of the file where the description of the grid is written\&. 
.RE
.PP

.SS "virtual Geometry* Map::getBoundary () const\fC [pure virtual]\fP"
Returns a pointer to a Geometry object that represents the external boundary of the map\&. 
.PP
\fBReturns\fP
.RS 4
a pointer to a Geometry object that represents the external boundary of the map\&. 
.RE
.PP

.PP
Implemented in \fBWKTMap\fP\&.
.SS "virtual Geometry* Map::getEnvelope () const\fC [pure virtual]\fP"
Returns the bounding box of the map\&. 
.PP
\fBReturns\fP
.RS 4
the bounding box of the map\&. 
.RE
.PP

.PP
Implemented in \fBWKTMap\fP\&.
.SS "const virtual GeometryFactory::Ptr& Map::getGlobalFactory () const\fC [pure virtual]\fP"
It returns a pointer to the GeometryFactory of the GEOS++ library needed to create Geometry objects\&. 
.PP
\fBReturns\fP
.RS 4
a pointer to the GeometryFactory of the GEOS++ library needed to create Geometry objects\&. 
.RE
.PP

.PP
Implemented in \fBWKTMap\fP\&.
.SS "const virtual unsigned long Map::getNoTiles () const\fC [virtual]\fP"
Returns the total number of tiles in the grid\&. 
.PP
\fBReturns\fP
.RS 4
the total number of tiles in the grid\&. 
.RE
.PP

.SS "virtual unsigned long Map::getNoTilesX () const\fC [virtual]\fP"
Returns the number of tiles of the grid on OX axis\&. 
.PP
\fBReturns\fP
.RS 4
the number of tiles of the grid on OX axis\&. 
.RE
.PP

.SS "virtual unsigned long Map::getNoTilesY () const\fC [virtual]\fP"
Returns the number of tiles of the grid on OY axis\&. 
.PP
\fBReturns\fP
.RS 4
the number of tiles of the grid on OY axis\&. 
.RE
.PP

.SS "virtual Coordinate Map::getTileCenter (unsigned long tileIndex) const\fC [virtual]\fP"
Given a tile index, this method computes the center of the tile\&. 
.PP
\fBParameters\fP
.RS 4
\fItileIndex\fP the tile index\&. Index 0 is assigned to the bottom left tile and the tiles are numbered using a row-major order\&. 
.RE
.PP
\fBReturns\fP
.RS 4
the center of the tile with the index provided through the \fItileIndex\fP parameter\&. 
.RE
.PP

.SS "virtual Coordinate* Map::getTileCenters () const\fC [virtual]\fP"
Returns an array with the coordinates of the centers of all tiles in the grid\&. 
.PP
\fBReturns\fP
.RS 4
an array of Coordinate objects with the coordinates of the centers of all tiles in the grid\&. 
.RE
.PP

.SS "virtual unsigned long Map::getTileNo (const Point * p) const\fC [virtual]\fP"
Given a position on the map specified by a Point object, this method computes the tile number where this position falls\&. 
.PP
\fBParameters\fP
.RS 4
\fIp\fP a position on the map\&. 
.RE
.PP
\fBReturns\fP
.RS 4
the tile number where the position specified by \fIp\fP falls\&. 
.RE
.PP

.SS "virtual unsigned long Map::getTileNo (double x, double y) const\fC [virtual]\fP"
Given a position on the map specified by a x and y coordinates, this method computes the tile number where this position falls\&. 
.PP
\fBParameters\fP
.RS 4
\fIx\fP the x coordinate of the position\&. 
.br
\fIy\fP the x coordinate of the position\&. 
.RE
.PP
\fBReturns\fP
.RS 4
the tile number where the position specified by \fIx\fP and \fIy\fP falls\&. 
.RE
.PP

.SS "virtual double Map::getXOrigin () const\fC [virtual]\fP"
Returns the x coordinate of the origin of the grid\&. 
.PP
\fBReturns\fP
.RS 4
the x coordinate of the origin of the grid\&. 
.RE
.PP

.SS "virtual double Map::getXTileDim () const\fC [virtual]\fP"
Returns the dimension of tile on OX axis\&. 
.PP
\fBReturns\fP
.RS 4
the dimension of tile on OX axis\&. 
.RE
.PP

.SS "virtual double Map::getYOrigin () const\fC [virtual]\fP"
Returns the y coordinate of the origin of the grid\&. 
.PP
\fBReturns\fP
.RS 4
the y coordinate of the origin of the grid\&. 
.RE
.PP

.SS "virtual double Map::getYTileDim () const\fC [virtual]\fP"
Returns the dimension of tile on OY axis\&. 
.PP
\fBReturns\fP
.RS 4
the dimension of tile on OY axis\&. 
.PP
.RE
.PP

.SS "virtual bool Map::hasGrid () const\fC [virtual]\fP"
Returns true if the grid is set, false otherwise\&. This method is needed because the \fBGrid\fP object is not created by the constructor of this class but it is set a later moment, after the parameters of the grid are read from the simulation configuration file\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "\fBGrid\fP* Map::m_grid\fC [protected]\fP"

.SS "string Map::m_mapFileName\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Simulator from the source code\&.
