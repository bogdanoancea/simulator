.TH "RandomWalkDriftDisplacement" 3 "Thu May 20 2021" "Simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RandomWalkDriftDisplacement
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <RandomWalkDriftDisplacement\&.h>\fP
.PP
Inherits \fBDisplace\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRandomWalkDriftDisplacement\fP (\fBSimulationConfiguration\fP *simConfig, double speed)"
.br
.ti -1c
.RI "virtual Point * \fBgenerateNewLocation\fP (Point *p) override"
.br
.ti -1c
.RI "virtual \fB~RandomWalkDriftDisplacement\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "bool \fBm_changeDirection\fP"
.br
.ti -1c
.RI "\fBRandomWalkDriftScenario\fP * \fBm_randomWalkDriftScenario\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class is part of the Strategy design pattern used to implement the displacement of persons on the map\&. It implements the random walk with drift behavior, overriding the \fBgenerateNewLocation()\fP method from its superclass, \fBDisplace\fP\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "RandomWalkDriftDisplacement::RandomWalkDriftDisplacement (\fBSimulationConfiguration\fP * simConfig, double speed)"
Constructor of the class\&. It only passes the arguments to the superclass, \fBDisplace\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIspeed\fP the speed of displacement\&. 
.RE
.PP

.SS "virtual RandomWalkDriftDisplacement::~RandomWalkDriftDisplacement ()\fC [virtual]\fP"
Destructor\&. It does nothing\&. 
.SH "Member Function Documentation"
.PP 
.SS "virtual Point* RandomWalkDriftDisplacement::generateNewLocation (Point * p)\fC [override]\fP, \fC [virtual]\fP"
Implements the random walk with drift behavior\&. During the first half of the simulation it generates a displacement direction as a random value normally distributed with the mean equals to SIM_TREND_ANGLE_1 (a predefined constant) and sd equals to 0\&.1 and during the second half the mean of the distribution is changed to SIM_TREND_ANGLE_2\&. The step length of the displacement along this direction is computed using the speed and the time duration of a simulation step\&. If the new location is outside the map, it returns the current location, i\&.e\&. the object will stay in the same location until the next simulation step and raise a flag, so that at the simulation step the direction is changed with approximately 180 degrees (the actual value is a random value from an uniform distribution centered at PI value)\&. 
.PP
\fBParameters\fP
.RS 4
\fIp\fP a pointer to the current location\&. 
.RE
.PP
\fBReturns\fP
.RS 4
the new location\&. 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "bool RandomWalkDriftDisplacement::m_changeDirection\fC [private]\fP"

.SS "\fBRandomWalkDriftScenario\fP* RandomWalkDriftDisplacement::m_randomWalkDriftScenario\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Simulator from the source code\&.
