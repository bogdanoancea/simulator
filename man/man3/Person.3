.TH "Person" 3 "Wed May 12 2021" "Simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Person
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Person\&.h>\fP
.PP
Inherits \fBMovableAgent\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBGender\fP { \fBMALE\fP, \fBFEMALE\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPerson\fP (const \fBMap\fP *m, const unsigned long id, Point *initPosition, const \fBClock\fP *clock, double initSpeed, int age, \fBGender\fP gender, shared_ptr< \fBDistribution\fP > timeStayDistribution, shared_ptr< \fBDistribution\fP > intervalBetweenStaysDistribution)"
.br
.ti -1c
.RI "virtual \fB~Person\fP ()"
.br
.ti -1c
.RI "const string \fBtoString\fP () const override"
.br
.ti -1c
.RI "string \fBdumpDevices\fP ()"
.br
.ti -1c
.RI "bool \fBhasDevices\fP ()"
.br
.ti -1c
.RI "int \fBgetAge\fP () const"
.br
.ti -1c
.RI "void \fBsetAge\fP (int age)"
.br
.ti -1c
.RI "virtual Point * \fBmove\fP () override"
.br
.ti -1c
.RI "virtual void \fBsetLocation\fP (Point *pt) override"
.br
.ti -1c
.RI "void \fBaddDevice\fP (string type, \fBAgent\fP *agent)"
.br
.ti -1c
.RI "void \fBsetDisplacementMethod\fP (const shared_ptr< \fBDisplace\fP > &displace)"
.br
.ti -1c
.RI "void \fBsetHomeLocation\fP (Point *hl)"
.br
.ti -1c
.RI "Point * \fBgetHomeLocation\fP () const"
.br
.ti -1c
.RI "void \fBsetWorkLocation\fP (Point *wl)"
.br
.ti -1c
.RI "Point * \fBgetWorkLocation\fP () const"
.br
.ti -1c
.RI "void \fBsetAnchorLocation\fP (Point *al)"
.br
.ti -1c
.RI "Point * \fBgetAnchorLocation\fP () const"
.br
.ti -1c
.RI "bool \fBisHomePerson\fP () const"
.br
.ti -1c
.RI "const shared_ptr< \fBDistribution\fP > & \fBgetIntervalBetweenStaysDistribution\fP () const"
.br
.ti -1c
.RI "void \fBsetIntervalBetweenStaysDistribution\fP (const shared_ptr< \fBDistribution\fP > &intervalBetweenStaysDistribution)"
.br
.ti -1c
.RI "const shared_ptr< \fBDistribution\fP > & \fBgetTimeStayDistribution\fP () const"
.br
.ti -1c
.RI "void \fBsetTimeStayDistribution\fP (const shared_ptr< \fBDistribution\fP > &timeStayDistribution)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const string \fBgetHeader\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "int \fBm_age\fP"
.br
.ti -1c
.RI "\fBGender\fP \fBm_gender\fP"
.br
.ti -1c
.RI "unordered_multimap< string, \fBAgent\fP * > \fBm_idDevices\fP"
.br
.ti -1c
.RI "shared_ptr< \fBDistribution\fP > \fBm_timeStayDistribution\fP"
.br
.ti -1c
.RI "unsigned long \fBm_timeStay\fP"
.br
.ti -1c
.RI "shared_ptr< \fBDistribution\fP > \fBm_intervalBetweenStaysDistribution\fP"
.br
.ti -1c
.RI "unsigned long \fBm_nextStay\fP"
.br
.ti -1c
.RI "shared_ptr< \fBDisplace\fP > \fBm_displacementMethod\fP"
.br
.ti -1c
.RI "Point * \fBm_homeLocation\fP"
.br
.ti -1c
.RI "Point * \fBm_workLocation\fP"
.br
.ti -1c
.RI "Point * \fBm_anchorLocation\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class represents a person that can have 0,1 or 2 mobile phone(s)\&. During the simulation the person move around the map, carrying his/her mobile devices\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBPerson::Gender\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMALE \fP\fP
.TP
\fB\fIFEMALE \fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Person::Person (const \fBMap\fP * m, const unsigned long id, Point * initPosition, const \fBClock\fP * clock, double initSpeed, int age, \fBGender\fP gender, shared_ptr< \fBDistribution\fP > timeStayDistribution, shared_ptr< \fBDistribution\fP > intervalBetweenStaysDistribution)\fC [explicit]\fP"
Builds a new \fBPerson\fP object with the characteristics given as parameters\&. 
.PP
\fBParameters\fP
.RS 4
\fIm\fP a pointer to the \fBMap\fP object where this \fBPerson\fP move\&. 
.br
\fIid\fP the id of the \fBPerson\fP\&. 
.br
\fIinitPosition\fP the initial location of the person on the map\&. 
.br
\fIclock\fP a pointer to a \fBClock\fP object used for this simulation\&. 
.br
\fIinitSpeed\fP the initial speed of this person\&. It is provided in the configuration file\&. 
.br
\fIage\fP the age of the person\&. The age is generated using a uniform or a normal distribution\&. 
.br
\fIgender\fP the gender of the person\&. 
.br
\fItimeStay\fP the average time of a stop 
.br
\fIintervalBetweenStays\fP the average time between two consecutive stops\&. 
.RE
.PP

.SS "virtual Person::~Person ()\fC [virtual]\fP"
The default destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "void Person::addDevice (string type, \fBAgent\fP * agent)"
Add a mobile device to this person\&. Internally, all mobile devices are kept in an unordered_multimap as pairs <name of the device class, pointer to the device object> 
.PP
\fBParameters\fP
.RS 4
\fItype\fP the name of the device's class\&. 
.br
\fIagent\fP a pointer to the device object\&. 
.RE
.PP

.SS "string Person::dumpDevices ()"
Builds a string containing a list with the ids of the mobile devices that this person owns\&. 
.PP
\fBReturns\fP
.RS 4
a string containing a list with the ids of the mobile devices that this person owns\&. 
.RE
.PP

.SS "int Person::getAge () const"
Returns the age of the person\&. 
.PP
\fBReturns\fP
.RS 4
the age of the person\&. 
.RE
.PP

.SS "Point* Person::getAnchorLocation () const"

.SS "static const string Person::getHeader ()\fC [static]\fP"

.SS "Point* Person::getHomeLocation () const"

.SS "const shared_ptr<\fBDistribution\fP>& Person::getIntervalBetweenStaysDistribution () const"

.SS "const shared_ptr<\fBDistribution\fP>& Person::getTimeStayDistribution () const"

.SS "Point* Person::getWorkLocation () const"

.SS "bool Person::hasDevices ()"
returns true if this person has at least a mobile device, false otherwise\&. 
.PP
\fBReturns\fP
.RS 4
true if this person has at least a mobile device, false otherwise\&. 
.RE
.PP

.SS "bool Person::isHomePerson () const"

.SS "virtual Point* Person::move ()\fC [override]\fP, \fC [virtual]\fP"
Makes a step on the map according to an algorithm\&. The direction and the length of the step is determined by the displacement strategy set at the \fBPerson\fP creation moment and currently two strategies are supported: \fBRandomWalkDisplacement\fP and \fBRandomWalkDriftDisplacement\fP\&. \fBRandomWalkDisplacement\fP means that at each time instant the direction is generated as a uniformly distributed random value and the step length is computed multiplying the speed with the time interval set in the simulation configuration file\&. If a step projects it outside the map, it stops on the boundary\&. \fBRandomWalkDriftDisplacement\fP means that there is a preference in the direction of the movement\&. There are two constants defined, SIM_TREND_ANGLE_1 and SIM_TREND_ANGLE_2 (3PI/4 and 5PI/4), and in the first half of the simulation the direction is generated as a normal distributed random value with the mean equals to SIM_TREND_ANGLE_1 and sd = 0\&.1 while during the second half of the simulation it is generated as a normal distributed random value with the mean equals to SIM_TREND_ANGLE_2 and the same sd\&. Again, any kind of \fBMovableAgent\fP can only move inside the map boundary\&. If a step projects it outside the map, it stops on the boundary\&. 
.PP
\fBReturns\fP
.RS 4
the final location after the displacement\&. 
.RE
.PP

.PP
Implements \fBMovableAgent\fP\&.
.SS "void Person::setAge (int age)"
Sets the age of the person\&. 
.PP
\fBParameters\fP
.RS 4
\fIage\fP the age of the person\&. 
.RE
.PP

.SS "void Person::setAnchorLocation (Point * al)"

.SS "void Person::setDisplacementMethod (const shared_ptr< \fBDisplace\fP > & displace)"
Sets the displacement algorithm\&. 
.PP
\fBParameters\fP
.RS 4
\fIdisplace\fP a reference to an implementation of the displacement method\&. Currently two displacement methods are supported and they are implemented in \fBRandomWalkDisplacement\fP and \fBRandomWalkDriftDisplacement\fP classes\&. 
.RE
.PP

.SS "void Person::setHomeLocation (Point * hl)"

.SS "void Person::setIntervalBetweenStaysDistribution (const shared_ptr< \fBDistribution\fP > & intervalBetweenStaysDistribution)"

.SS "virtual void Person::setLocation (Point * pt)\fC [override]\fP, \fC [virtual]\fP"
Sets the location of the person on the map\&. 
.PP
\fBParameters\fP
.RS 4
\fIpt\fP a pointer to a Point object that represent the location of the person on the map\&. If the person has mobile devices (phone, tablets) this function calls \fBsetLocation()\fP for all mobile devices too\&. 
.RE
.PP

.PP
Reimplemented from \fBLocatableAgent\fP\&.
.SS "void Person::setTimeStayDistribution (const shared_ptr< \fBDistribution\fP > & timeStayDistribution)"

.SS "void Person::setWorkLocation (Point * wl)"

.SS "const string Person::toString () const\fC [override]\fP"
Builds and returns a human readable string representation of the person\&. 
.PP
\fBReturns\fP
.RS 4
a human readable string representation of the person\&. 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "int Person::m_age\fC [private]\fP"

.SS "Point* Person::m_anchorLocation\fC [private]\fP"

.SS "shared_ptr<\fBDisplace\fP> Person::m_displacementMethod\fC [private]\fP"

.SS "\fBGender\fP Person::m_gender\fC [private]\fP"

.SS "Point* Person::m_homeLocation\fC [private]\fP"

.SS "unordered_multimap<string, \fBAgent\fP*> Person::m_idDevices\fC [private]\fP"

.SS "shared_ptr<\fBDistribution\fP> Person::m_intervalBetweenStaysDistribution\fC [private]\fP"

.SS "unsigned long Person::m_nextStay\fC [private]\fP"

.SS "unsigned long Person::m_timeStay\fC [private]\fP"

.SS "shared_ptr<\fBDistribution\fP> Person::m_timeStayDistribution\fC [private]\fP"

.SS "Point* Person::m_workLocation\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Simulator from the source code\&.
