.TH "Tablet" 3 "Wed May 12 2021" "Simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Tablet
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Tablet\&.h>\fP
.PP
Inherits \fBHoldableAgent\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTablet\fP (const \fBMap\fP *m, const unsigned long id, Point *initPosition, const \fBClock\fP *clock)"
.br
.ti -1c
.RI "virtual \fB~Tablet\fP ()"
.br
.ti -1c
.RI "const string \fBtoString\fP () const override"
.br
.ti -1c
.RI "Point * \fBmove\fP () override"
.br
.ti -1c
.RI "bool \fBtryConnect\fP () override"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const string \fBgetHeader\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Tablet::Tablet (const \fBMap\fP * m, const unsigned long id, Point * initPosition, const \fBClock\fP * clock)\fC [explicit]\fP"
Builds a new \fBTablet\fP object with the parameters provided by the user\&. 
.PP
\fBParameters\fP
.RS 4
\fIm\fP a pointer to a \fBMap\fP object used for simulation\&. 
.br
\fIid\fP the id of the tablet\&. 
.br
\fIinitPosition\fP the initial location on map\&. 
.br
\fIclock\fP a pointer to a \fBClock\fP object used for simulation\&.\&. 
.RE
.PP

.SS "virtual Tablet::~Tablet ()\fC [virtual]\fP"
The default destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "static const string Tablet::getHeader ()\fC [static]\fP"

.SS "Point* Tablet::move ()\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"
Makes a step on the map according to an algorithm\&. The direction and the length of the step is determined by the displacement strategy and by the \fBPerson\fP object who owns this phone\&. The displacement strategy is set at the \fBPerson\fP object creation and currently two strategies are supported: \fBRandomWalkDisplacement\fP and \fBRandomWalkDriftDisplacement\fP\&. \fBRandomWalkDisplacement\fP means that at each time instant the direction is generated as a uniformly distributed random value and the step length is computed multiplying the speed with the time interval set in the simulation configuration file\&. If a step projects it outside the map, it stops on the boundary\&. \fBRandomWalkDriftDisplacement\fP means that there is a preference in the direction of the movement\&. There are two constants defined, SIM_TREND_ANGLE_1 and SIM_TREND_ANGLE_2 (3PI/4 and 5PI/4), and in the first half of the simulation the direction is generated as a normal distributed random value with the mean equals to SIM_TREND_ANGLE_1 and sd = 0\&.1 while during the second half of the simulation it is generated as a normal distributed random value with the mean equals to SIM_TREND_ANGLE_2 and the same sd\&. Again, any kind of \fBMovableAgent\fP can only move inside the map boundary\&. If a step projects it outside the map, it stops on the boundary\&. 
.PP
\fBReturns\fP
.RS 4
the final location after the displacement\&. 
.RE
.PP

.PP
Implements \fBMovableAgent\fP\&.
.SS "const string Tablet::toString () const\fC [override]\fP"
Builds a human readable representation of this class\&. 
.PP
\fBReturns\fP
.RS 4
a human readable representation of this class\&. 
.RE
.PP

.SS "bool Tablet::tryConnect ()\fC [override]\fP, \fC [virtual]\fP"
Called after the tablet changes location on the map, tries to connect to an antenna\&. 
.PP
\fBReturns\fP
.RS 4
true if the connection succeeds, false otherwise\&. 
.RE
.PP

.PP
Implements \fBHoldableAgent\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Simulator from the source code\&.
