.TH "Tablet" 3 "Thu May 20 2021" "Simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Tablet
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Tablet\&.h>\fP
.PP
Inherits \fBHoldableAgent\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTablet\fP (const \fBMap\fP *m, const unsigned long id, Point *initPosition, const \fBClock\fP *clock)"
.br
.ti -1c
.RI "virtual \fB~Tablet\fP ()"
.br
.ti -1c
.RI "const string \fBtoString\fP (bool detailed=false) const override"
.br
.ti -1c
.RI "Point * \fBmove\fP () override"
.br
.ti -1c
.RI "bool \fBtryConnect\fP () override"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const string \fBgetHeader\fP ()"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This class represents a mobile device (tablet)\&. A mobile device is owned by a \fBPerson\fP object and it moves on the map together with its owner\&. While moving, at every time step, when a new location is set, it interacts with surrounding antennas, trying to connect to the antenna that provides the best signal in terms of signal strength/dominance, according to the handover mechanism read from the simulation configuration file\&. The connection event is triggered by the call of \fBsetLocation()\fP\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Tablet::Tablet (const \fBMap\fP * m, const unsigned long id, Point * initPosition, const \fBClock\fP * clock)\fC [explicit]\fP"
Builds a new \fBTablet\fP object with the parameters provided by the user\&. 
.PP
\fBParameters\fP
.RS 4
\fIm\fP a pointer to a \fBMap\fP object used for simulation\&. 
.br
\fIid\fP the id of this object\&. 
.br
\fIinitPosition\fP the initial location on map\&. 
.br
\fIclock\fP a pointer to a \fBClock\fP object used for simulation\&.\&. 
.RE
.PP

.SS "virtual Tablet::~Tablet ()\fC [virtual]\fP"
The default destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "static const string Tablet::getHeader ()\fC [static]\fP"
Returns a string with the header line of the description of the mobile device returned by the \fBtoString()\fP method\&. It is a static method, the header line being the same for all mobile devices regardless the owner\&. 
.PP
\fBReturns\fP
.RS 4
a string with the header line of the description of the mobile device returned by the \fBtoString()\fP method\&. 
.RE
.PP

.SS "Point* Tablet::move ()\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"
Makes a step on the map according to the movement strategy set to the \fBPerson\fP object which owns this mobile device\&. The displacement strategy is set at the \fBPerson\fP object creation and currently the following strategies are supported: \fBRandomWalkDisplacement\fP, \fBRandomWalkDriftDisplacement\fP, \fBLevyFlightDisplacement\fP and \fBHomeWorkDisplacement\fP\&. 
.PP
\fBReturns\fP
.RS 4
the final location after the displacement\&. The mobile device moves together with the \fBPerson\fP which owns it\&. 
.RE
.PP

.PP
Implements \fBMovableAgent\fP\&.
.SS "const string Tablet::toString (bool detailed = \fCfalse\fP) const\fC [override]\fP, \fC [virtual]\fP"
Builds a string with the most relevant information of the class\&. It is useful to output the description of the mobile device to the console or to a file\&. The parameter \fCdetailed\fP is currently ignored\&. 
.PP
\fBParameters\fP
.RS 4
\fIdetailed\fP is currently ignored\&. 
.RE
.PP
\fBReturns\fP
.RS 4
a string object containing the id of the mobile device, the coordinates of the location, the current speed of movement, the id of the \fBPerson\fP object that owns this mobile device and the id of the mobile network operator where this mobile device has a subscription\&. 
.RE
.PP

.PP
Reimplemented from \fBHoldableAgent\fP\&.
.SS "bool Tablet::tryConnect ()\fC [override]\fP, \fC [virtual]\fP"
This method is called after the mobile device moves (together with its owner) to a new location and it tries to connect the mobile device to an antenna\&. The connection method is determined by inspecting the \fIm_connType\fP member: using the signal dominance or using the signal strength\&. The value of the \fIm_connType\fP member is set by the constructor of the class\&. If the connection is successfully, a pointer to the \fBAntenna\fP object where this mobile phone was connected is stored internally\&. First, if the mobile phone is already connected to an antenna, this method checks if the mobile phone is still providing a signal strong enough for a connection and if not it detaches from that antenna\&. Then it selects the antenna providing the best signal (in terms of signal strength or dominance) and tries to connect to it\&. If the connection is successful it saves a pointer to that \fBAntenna\fP object\&. If this antenna reject the connection (for example it reached its maximum number of simultaneous connections) then a list of all other antennas is build, ordered by the signal strength/dominance\&. The mobile phone iterates through this list and tries to connect to an antenna\&. If one antenna accepts the incoming connection the method returns true, otherwise it returns false\&. When a connection is established, the pointer to the \fBAntenna\fP object is updated accordingly\&. 
.PP
\fBReturns\fP
.RS 4
true if the connection succeeds, false otherwise\&. 
.RE
.PP

.PP
Implements \fBHoldableAgent\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Simulator from the source code\&.
