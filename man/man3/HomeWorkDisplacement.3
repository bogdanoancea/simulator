.TH "HomeWorkDisplacement" 3 "Thu May 20 2021" "Simulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
HomeWorkDisplacement
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <HomeWorkDisplacement\&.h>\fP
.PP
Inherits \fBDisplace\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBHomeWorkDisplacement\fP (\fBSimulationConfiguration\fP *simConfig, double speed, Point *homeLocation, Point *workLocation, Point *anchorLocation)"
.br
.ti -1c
.RI "virtual \fB~HomeWorkDisplacement\fP ()"
.br
.ti -1c
.RI "virtual Point * \fBgenerateNewLocation\fP (Point *p) override"
.br
.ti -1c
.RI "\fBHomeWorkState\fP \fBgetState\fP () const"
.br
.ti -1c
.RI "unsigned long \fBgetDeltaTStayAnchor\fP () const"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBHomeWorkState\fP \fBstateTransition\fP (Point *position)"
.br
.ti -1c
.RI "long \fBinitDeltaTStayHome\fP () const"
.br
.ti -1c
.RI "long \fBinitDeltaTStayWork\fP () const"
.br
.ti -1c
.RI "long \fBinitDeltaTStayAnchor\fP () const"
.br
.ti -1c
.RI "const bool \fBposAtDestination\fP (Point *position, Point *destination) const"
.br
.ti -1c
.RI "const bool \fBarrivedAtDestination\fP (Point *position, Point *destination) const"
.br
.ti -1c
.RI "Point * \fBmakeRandomStepAtWork\fP (Point *initLocation)"
.br
.ti -1c
.RI "Point * \fBtoDestination\fP (Point *initLocation, Point *destination)"
.br
.ti -1c
.RI "double \fBcomputeTheta\fP (Point *p1, Point *p2) const"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "long \fBm_deltaTStayHome\fP"
.br
.ti -1c
.RI "long \fBm_deltaTStayWork\fP"
.br
.ti -1c
.RI "long \fBm_deltaTStayAnchor\fP"
.br
.ti -1c
.RI "\fBHomeWorkState\fP \fBm_state\fP"
.br
.ti -1c
.RI "Point * \fBm_homeLocation\fP"
.br
.ti -1c
.RI "Point * \fBm_workLocation\fP"
.br
.ti -1c
.RI "Point * \fBm_anchorLocation\fP"
.br
.ti -1c
.RI "\fBDistribution\fP * \fBm_angleDistribution\fP"
.br
.ti -1c
.RI "double \fBm_stepLength\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class is part of the Strategy design pattern used to implement the displacement of persons on the map\&. It implements the home-work scenario, overriding the \fBgenerateNewLocation()\fP method from its superclass, \fBDisplace\fP\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "HomeWorkDisplacement::HomeWorkDisplacement (\fBSimulationConfiguration\fP * simConfig, double speed, Point * homeLocation, Point * workLocation, Point * anchorLocation)"
This is the constructor of the class\&. 
.PP
\fBParameters\fP
.RS 4
\fIsimConfig\fP the SimConfig object containing the simulation configuration options read from the simulation configuration file\&. 
.br
\fIspeed\fP the speed of the person\&. This value is read from persons configuration file\&. 
.br
\fIhomeLocation\fP the home location\&. This value is set at the creation of the \fBPerson\fP object and it is a point whose coordinates are generated from a normal distribution with the parameters read from the simulation configuration file\&. The persons involved in a simulation are equally distributed among the home locations\&. 
.br
\fIworkLocation\fP the work location the work location\&. This value is set at the creation of the \fBPerson\fP object and it is a point whose coordinates are generated from a normal distribution with the parameters read from the simulation configuration file\&. If there are several work locations in this file, a work location is assigned for each person using a uniform distribution\&. 
.RE
.PP

.SS "virtual HomeWorkDisplacement::~HomeWorkDisplacement ()\fC [virtual]\fP"
This is the destructor of the class\&. It does nothing\&. 
.SH "Member Function Documentation"
.PP 
.SS "const bool HomeWorkDisplacement::arrivedAtDestination (Point * position, Point * destination) const\fC [private]\fP"

.SS "double HomeWorkDisplacement::computeTheta (Point * p1, Point * p2) const\fC [private]\fP"

.SS "virtual Point* HomeWorkDisplacement::generateNewLocation (Point * p)\fC [override]\fP, \fC [virtual]\fP"
Implements the home - work behavior\&. It takes a pointer to the current location, and generates a new location according to the current status of the person\&. 
.PP
\fBParameters\fP
.RS 4
\fIp\fP a pointer to the current location\&. 
.RE
.PP
\fBReturns\fP
.RS 4
the new location\&. 
.RE
.PP

.SS "unsigned long HomeWorkDisplacement::getDeltaTStayAnchor () const\fC [inline]\fP"

.SS "\fBHomeWorkState\fP HomeWorkDisplacement::getState () const"

.SS "long HomeWorkDisplacement::initDeltaTStayAnchor () const\fC [private]\fP"

.SS "long HomeWorkDisplacement::initDeltaTStayHome () const\fC [private]\fP"

.SS "long HomeWorkDisplacement::initDeltaTStayWork () const\fC [private]\fP"

.SS "Point* HomeWorkDisplacement::makeRandomStepAtWork (Point * initLocation)\fC [private]\fP"

.SS "const bool HomeWorkDisplacement::posAtDestination (Point * position, Point * destination) const\fC [private]\fP"

.SS "\fBHomeWorkState\fP HomeWorkDisplacement::stateTransition (Point * position)\fC [private]\fP"

.SS "Point* HomeWorkDisplacement::toDestination (Point * initLocation, Point * destination)\fC [private]\fP"

.SH "Member Data Documentation"
.PP 
.SS "Point* HomeWorkDisplacement::m_anchorLocation\fC [private]\fP"

.SS "\fBDistribution\fP* HomeWorkDisplacement::m_angleDistribution\fC [private]\fP"

.SS "long HomeWorkDisplacement::m_deltaTStayAnchor\fC [private]\fP"

.SS "long HomeWorkDisplacement::m_deltaTStayHome\fC [private]\fP"

.SS "long HomeWorkDisplacement::m_deltaTStayWork\fC [private]\fP"

.SS "Point* HomeWorkDisplacement::m_homeLocation\fC [private]\fP"

.SS "\fBHomeWorkState\fP HomeWorkDisplacement::m_state\fC [private]\fP"

.SS "double HomeWorkDisplacement::m_stepLength\fC [private]\fP"

.SS "Point* HomeWorkDisplacement::m_workLocation\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Simulator from the source code\&.
